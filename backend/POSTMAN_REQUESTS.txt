===========================================
COMPLETE POSTMAN REQUESTS GUIDE
===========================================

BASE URL: http://localhost:5000

===========================================
1. HOME (GET)
===========================================
Method: GET
URL: http://localhost:5000/
Headers: None
Body: None

===========================================
2. HEALTH CHECK (GET)
===========================================
Method: GET
URL: http://localhost:5000/health
Headers: None
Body: None

===========================================
3. PROCESS FILE (POST)
===========================================
Method: POST
URL: http://localhost:5000/process-file
Headers: Content-Type: multipart/form-data
Body: Form-data
- Key: file
- Type: File
- Value: Select your file (PDF, DOCX, TXT, or XLSX)

===========================================
4. ANALYZE JSON (POST)
===========================================
Method: POST
URL: http://localhost:5000/analyze-json
Headers: Content-Type: application/json
Body: Raw JSON
{
  "filename": "test_document.pdf",
  "type": "CV",
  "summary": "Test document summary",
  "entities": [
    {
      "text": "John Doe",
      "label": "PERSON"
    },
    {
      "text": "Software Engineer",
      "label": "WORK_OF_ART"
    }
  ],
  "full_text": "This is a test document content for analysis. John Doe is a Software Engineer with 5 years of experience in Python development."
}

===========================================
5. FILE ANALYSIS (POST)
===========================================
Method: POST
URL: http://localhost:5000/file-analysis
Headers: Content-Type: application/json
Body: Raw JSON
{
  "filename": "test_document.pdf",
  "type": "CV",
  "summary": "Test document summary",
  "entities": [
    {
      "text": "John Doe",
      "label": "PERSON"
    },
    {
      "text": "Software Engineer",
      "label": "WORK_OF_ART"
    }
  ],
  "full_text": "This is a test document content for detailed analysis. John Doe is a Software Engineer with 5 years of experience in Python development."
}

===========================================
6. LOAD EMAILS (GET)
===========================================
Method: GET
URL: http://localhost:5000/load-emails
Headers: None
Body: None

===========================================
7. EXTRACT PDF (POST)
===========================================
Method: POST
URL: http://localhost:5000/extract-pdf
Headers: Content-Type: multipart/form-data
Body: Form-data
- Key: file
- Type: File
- Value: Select your PDF file

===========================================
8. SUMMARIZE CONVERSATION (POST)
===========================================
Method: POST
URL: http://localhost:5000/summarize-conversation
Headers: Content-Type: application/json
Body: Raw JSON
{
  "id": "11",
  "folder": "INBOX",
  "subject": "Re: Welcome message from Veltrix Foods",
  "from": "Алина Конончук <akononciuc@gmail.com>",
  "to": "Dimas Pro <test.server.composer@gmail.com>",
  "date": "Sat, 21 Jun 2025 18:26:59 +0300",
  "body": "Dear Dimas Pro,\r\n\r\nI think it's perfect!\r\nLet's schedule the meeting on wednesday 25.06.2025 at 4 pm.\r\n\r\nPlease let us know if this works for you.\r\n\r\nBest regards,\r\nMaria Iscariot\r\nProcurement Manager\r\nVeltrix Foods"
}

===========================================
9. GENERATE RESPONSE (POST)
===========================================
Method: POST
URL: http://localhost:5000/generate-response
Headers: Content-Type: application/json
Body: Raw JSON
{
  "id": "11",
  "folder": "INBOX",
  "subject": "Re: Welcome message from Veltrix Foods",
  "from": "Алина Конончук <akononciuc@gmail.com>",
  "to": "Dimas Pro <test.server.composer@gmail.com>",
  "date": "Sat, 21 Jun 2025 18:26:59 +0300",
  "body": "Dear Dimas Pro,\r\n\r\nI think it's perfect!\r\nLet's schedule the meeting on wednesday 25.06.2025 at 4 pm.\r\n\r\nPlease let us know if this works for you.\r\n\r\nBest regards,\r\nMaria Iscariot\r\nProcurement Manager\r\nVeltrix Foods"
}

===========================================
POSTMAN SETUP INSTRUCTIONS
===========================================

1. IMPORT COLLECTION:
   - Open Postman
   - Click "Import"
   - Select File_Analysis_API.postman_collection.json

2. FOR FILE UPLOADS:
   - Go to Body tab
   - Select "form-data"
   - Add key: file
   - Change type to "File"
   - Select your file

3. FOR JSON REQUESTS:
   - Go to Body tab
   - Select "raw"
   - Choose "JSON" from dropdown
   - Copy and paste the JSON body above

4. TEST ORDER:
   1. Home (GET)
   2. Health Check (GET)
   3. Load Emails (GET)
   4. Process File (POST) - upload a file
   5. Analyze JSON (POST)
   6. File Analysis (POST)
   7. Summarize Conversation (POST)
   8. Generate Response (POST)
   9. Extract PDF (POST) - upload a PDF

===========================================
CURL EXAMPLES
===========================================

Home:
curl -X GET http://localhost:5000/

Health Check:
curl -X GET http://localhost:5000/health

Load Emails:
curl -X GET http://localhost:5000/load-emails

Process File:
curl -X POST -F "file=@your_file.pdf" http://localhost:5000/process-file

Analyze JSON:
curl -X POST -H "Content-Type: application/json" -d '{"filename":"test.pdf","type":"CV","summary":"Test","entities":[],"full_text":"Test content"}' http://localhost:5000/analyze-json

Summarize Conversation:
curl -X POST -H "Content-Type: application/json" -d '{"id":"11","subject":"Test","from":"test@example.com","body":"Test conversation"}' http://localhost:5000/summarize-conversation

Generate Response:
curl -X POST -H "Content-Type: application/json" -d '{"id":"11","subject":"Test","from":"test@example.com","body":"Test message"}' http://localhost:5000/generate-response

=========================================== 